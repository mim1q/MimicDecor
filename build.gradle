import com.modrinth.minotaur.dependencies.ModDependency

plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "maven-publish"
    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
}

modrinth {
    projectId.set("GKTsHyh1")
    uploadFile.set(remapJar)
    versionType.set("${project.mod_version_type}")
    versionName.set("mimicdecor-${project.minecraft_version}-${project.mod_version_type}-${project.mod_version}")
    changelog.set(rootProject.file("changelogs/mimicdecor_${project.mod_version}.md").text)
    syncBodyFrom.set(rootProject.file("README.MD").text)

    dependencies.set([
        // Fabric API
        new ModDependency("P7dR8mSH", "required")
    ])
}

curseforge {
    apiKey = System.getenv("CURSEGRADLE_TOKEN")
    project {
        id = "641229"
        changelog = rootProject.file("changelogs/mimicdecor_${project.mod_version}.md").text
        changelogType = "markdown"
        releaseType = "${project.mod_version_type}"
        addGameVersion "Fabric"
        addGameVersion "1.19"
        relations {
            requiredLibrary "fabric-api"
        }
        afterEvaluate {
            mainArtifact(remapJar) {
                displayName = "minecells-${project.minecraft_version}-${project.mod_version_type}-${project.mod_version}"
            }
            uploadTask.dependsOn(remapJar)
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

def dataOutput = 'src/main/generated'
loom {
    runs {
        datagen {
            server()

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file(dataOutput)}"

            runDir "build/datagen"
        }
    }
}

assemble.dependsOn runDatagen

sourceSets {
    main {
        resources {
            srcDirs += dataOutput
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}